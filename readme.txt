2016/7/2 15:00:59  PWM控制灯光可行
2016/7/4 8:59:14 修改定时为0.1ms中断
		#define MAIN_Fosc		11059200UL	//定义主时钟
		#define	Timer0_Rate		10000UL		//中断频率
		#define		PWM_DUTY_MAX	100
		注意以上三者对灯光效果的影响：
		1.人的眼睛看不到闪烁，要求其闪烁频率大于10. 取100(10ms)
		2.将10ms分成100等分，则要求时钟每0.1秒一次中断. 也就是PWM周期与时钟中断相关
		用查表方式控制灯的亮度，从实验结果看较为可取
2016/7/5 17:46:57
		uart4使用参考: http://bbs.elecfans.com/jishu_546658_1_1.html
		(与RK3188相连的mcu为主MCU。另一MCU为副MCU)
		从应用场景看。可作以下处理：
								a. 主MCU(uart2)收到任何RK3188发来的数据，立即转发(uart4)给副MCU，是可行的
								b. 主MCU收到任何(uart4)副MCU发来的数据，立即转发给(uart2)RK3188，是可行的。也可直接丢弃
2016/7/8 15:50:41
        确认pwmTmr_set起作用了. 协议相关常数定义提到const.h文件中
2016/7/11 19:58:37
        定时器有修改..定时器实现PWM(P3.7对应引脚也实现PWM控制)
2016/7/16 10:46:17
        确认uart1的收发与定时器同时生效. 串口收发正常，PWM同时起作用. 调整代码. uart2可以发送数据. 发现uart2只一次，并且数据被正确识别. uart2正常工作(与uart1并行)
2016/7/18 10:13:13
        按原理图中的引脚图加入PWM1(P2.7), 控制已生效. 重新定义并使用眼睛的i/o引脚. 添加功能栈, 处理不同的场景备用
2016/7/25 9:16:36
        整理pwm存贮使用. pwm控制闪烁. 中断环境led端口控制生效
2016/7/26 18:29:54
        重新规划颜色与动作
2016/7/27 11:17:09
        补充嘴巴/眼睛的颜色/形状控制。整理扩充动作队列。调整函数指针定义及使用. 修改动作队列中的宏定义，调整用法. P4.4输出不符合预期，设置为弱上拉后输出正常
2016/7/28 9:43:55
        串口接收超时计数调整，以1ms为计时单位(以前以10ms为计时单位). mouse颜色序号添加黑色. 协议到动作的转换框架完成. 完成打通协议到灯光动作.
2016/8/6 14:10:13
        几个命令控制灯的状态
2016/8/8 9:43:54 
        去除ear相关没用到的代码(统一用开形状和颜色两个维度). 修正p4.5/p4.6不能正常输出电平的故障. 修正eye白色错误. 修正形状错误(345而非456控制eye). 修正颜色错误
2016/8/9 11:26:15
        修正ear不能正常输出红色的故障(表现为后续可输出红色，原因不明，设定端口为双向弱上拉后正常). 确认各pwm及状态控制正常. 
        目前的1个事件队列不能正常处理协议，已放弃。需要添加队列才能满足当前需求. 目前考虑放弃使用事件队列
2016/8/10 11:35:36
        调整函数指针数组长度2^n对齐. 修改pwdTmr_set()中的赋值顺序. 将命令执行提到调用上提一级
2016/8/12 16:13:24
        改正get_command()形参使用的错误
2016/8/15 15:35:09
        验证通过命令控制灯的颜色形状等(最初设计的函数指针数组的方式不成正确运行，初步判定系参数传递故障。未查明更深层原因). 重新组织mouse/eye/ear的颜色形状数组并验证可用
2016/8/16 13:40:07
        屏蔽修改后未用的函数指针数组. 控制led端口状态的函数用宏代替pwdTmr_set()/pwdTmr_setWide()/ledport_setTmr()/ledport_setStat()
        